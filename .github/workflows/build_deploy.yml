name: Apply-Delete Terraform

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  CR_REGISTRY: crp5td2ej9d9m9e880v2
  CR_REPOSITORY: football
  FOLDER_ID: b1g6s7qrbeu4ndif5p99
  IMAGE_TAG: ${{github.ref_name}}
  SERVICE_ACCOUNT_ID: ajen1tae40l1m54cklch
  YC_CLOUD_ID: b1gdu3f7krlqqp5bjaqr
  YC_FOLDER_ID: b1g6s7qrbeu4ndif5p99

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          IMAGE_TAG: ${{github.ref_name}}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  redeploy-destroy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: IAM Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.1"

      - name: Mustache
        uses: edgardleal/mustache-template-action@v1.0.0
        env:
          IMAGE_TAG: ${{github.ref_name}}
        with:
          input: ./terraform/docker-compose.yaml
          output: ./terraform/docker-compose.yaml

      - name: export_var
        run: export YC_TOKEN="${{ steps.issue-iam-token.outputs.token }}"

      - name: init
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform init -backend-config="access_key=${{ secrets.ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        id: plan
        run: terraform plan -no-color

      - name: destroy-itself
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform destroy -auto-approve

  redeploy-apply:
    needs: redeploy-destroy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: IAM Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{env.TERRAFORM_VERSION}}

      - name: Mustache
        uses: edgardleal/mustache-template-action@v1.0.0
        env:
          IMAGE_TAG: ${{github.ref_name}}
        with:
          input: ./terraform/docker-compose.yaml
          output: ./terraform/docker-compose.yaml

      - name: export_var
        run: export YC_TOKEN="${{ steps.issue-iam-token.outputs.token }}"

      - name: init
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform init -backend-config="access_key=${{ secrets.ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        id: plan
        run: terraform plan -no-color

      - name: apply-itself
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
          IMAGE_TAG: ${{github.ref_name}}
        run: terraform apply -auto-approve
