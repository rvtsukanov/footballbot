# This is a basic workflow to help you get started with Actions

name: Apply-Delete Terraform

# Controls when the action will run.
on:
#  push:
#    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SERVICE_ACCOUNT_ID: ajen1tae40l1m54cklch
  YC_CLOUD_ID: b1gdu3f7krlqqp5bjaqr
  YC_FOLDER_ID: b1g6s7qrbeu4ndif5p99
  TERRAFORM_VERSION: 1.8.1



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: IAM Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{env.TERRAFORM_VERSION}}

      - name: export_var
        run: export YC_TOKEN="${{ steps.issue-iam-token.outputs.token }}"

      - name: init
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform init -backend-config="access_key=${{ secrets.ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        id: plan
        run: terraform plan -no-color

      - name: apply-itself
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform apply -auto-approve


  terraform-destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: IAM Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.1"

      - name: export_var
        run: export YC_TOKEN="${{ steps.issue-iam-token.outputs.token }}"

      - name: init
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform init -backend-config="access_key=${{ secrets.ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        id: plan
        run: terraform plan -no-color

      - name: destroy-itself
        working-directory: ./terraform
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
        run: terraform destroy -auto-approve
